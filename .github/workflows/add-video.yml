name: Add Video via Dispatch

on:
  workflow_dispatch:
    inputs:
      link:
        description: "YouTube ссылка (https://www.youtube.com/... или https://youtu.be/...)"
        required: true
      title:
        description: "Название видео"
        required: true
      channel:
        description: "Название канала"
        required: true
  issue_comment:
    types: [created]

jobs:
  add-video:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check trigger context
        id: guard
        run: |
          echo "should_run=false" >> "$GITHUB_OUTPUT"
          echo "issue_mode=false" >> "$GITHUB_OUTPUT"
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[ "${GITHUB_EVENT_NAME}" == "issue_comment" ]]; then
            if [[ "${{ github.event.issue.pull_request }}" != "" ]]; then
              echo "PR comment detected; skipping."
              exit 0
            fi
            comment_body="${{ github.event.comment.body }}"
            prefix="/add-video"
            first_line="$(printf '%s' "$comment_body" | head -n1 | tr -d '\r')"
            if [[ "${first_line}" != "${prefix}" ]]; then
              echo "Comment without /add-video prefix; skipping."
              exit 0
            fi
            author="${{ github.event.comment.user.login }}"
            issue_author="${{ github.event.issue.user.login }}"
            if [[ "${author}" != "${issue_author}" ]]; then
              echo "Only issue author may submit the command; skipping."
              exit 0
            fi
            echo "should_run=true" >> "$GITHUB_OUTPUT"
            echo "issue_mode=true" >> "$GITHUB_OUTPUT"
            echo "raw_command=${comment_body}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Unsupported trigger ${GITHUB_EVENT_NAME}; skipping."
          exit 0

      - name: Parse issue command
        if: steps.guard.outputs.issue_mode == 'true'
        id: parse
        env:
          PAYLOAD: ${{ steps.guard.outputs.raw_command }}
        run: |
          python parse_issue_command.py

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Append video entry
        if: steps.guard.outputs.should_run == 'true'
        env:
          LINK: ${{ steps.parse.outputs.LINK || inputs.link }}
          TITLE: ${{ steps.parse.outputs.TITLE || inputs.title }}
          CHANNEL: ${{ steps.parse.outputs.CHANNEL || inputs.channel }}
        run: |
          python append_video_entry.py \
            --link "$LINK" \
            --title "$TITLE" \
            --channel "$CHANNEL"

      - name: Generate README
        if: steps.guard.outputs.should_run == 'true'
        run: make readme

      - name: Create Pull Request
        if: steps.guard.outputs.should_run == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Add video: ${{ steps.parse.outputs.TITLE || inputs.title }}"
          branch: "bot/add-video-${{ github.run_id }}"
          title: "Add video: ${{ steps.parse.outputs.TITLE || inputs.title }}"
          body: |
            Добавлено новое видео:
            - Канал: `${{ steps.parse.outputs.CHANNEL || inputs.channel }}`
            - Название: `${{ steps.parse.outputs.TITLE || inputs.title }}`
            - Ссылка: `${{ steps.parse.outputs.LINK || inputs.link }}`
          add-paths: |
            list.json
            README.md
